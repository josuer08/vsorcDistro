Devices: ['s3', 's2', 's1', 'h1', 'h2', 'h3']
Links: ['s1:s2', 's2:s3', 's1:h1', 's2:h2', 's3:h3']
Hosts: ['h1', 'h2', 'h3']
Switches: ['s3', 's2', 's1']

*** Checking all Raspberry Pi
rpi2 rpi3 rpi4 rpi5 rpi6 rpi7 rpi8 rpi9 rpi10 rpi11 rpi12 rpi13 rpi14 rpi15 

*** Placing nodes on Raspberry Pi Cluster
h1:rpi2 h2:rpi3 h3:rpi4 s1:rpi2 s2:rpi3 s3:rpi4 

*** Creating network...
*** Adding controller
*** Adding hosts:
h1 h2 h3 
*** Adding switches:
s1 s2 s3 
*** Adding links:
(s1, h1) (s1, s2) (s2, h2) (s2, s3) (s3, h3) 
*** Configuring hosts
h1 h2 h3 
*** Starting controller
c1 
*** Starting 3 switches
s1 s2 s3 (rpi2)...(rpi3)...(rpi4)...
*** Starting CLI:
*** CLI Started:
*** Ping: testing ping reachability
h1 -> h2 h3 
h2 -> h1 h3 
h3 -> h1 h2 
*** Results: 0% dropped (6/6 received)
 root@raspberrypi:/home/pi $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 root@raspberrypi:/home/pi $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 root@raspberrypi:/home/pi $h1-eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1450
        inet 10.0.0.1  netmask 255.0.0.0  broadcast 10.255.255.255
        inet6 fe80::842b:4aff:fea3:cd22  prefixlen 64  scopeid 0x20<link>
        ether 86:2b:4a:a3:cd:22  txqueuelen 1000  (Ethernet)
        RX packets 248  bytes 31310 (30.5 KiB)
        RX errors 0  dropped 83  overruns 0  frame 0
        TX packets 18  bytes 1356 (1.3 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

 root@raspberrypi:/home/pi $h1-eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1450
        inet 10.0.0.1  netmask 255.0.0.0  broadcast 10.255.255.255
        inet6 fe80::842b:4aff:fea3:cd22  prefixlen 64  scopeid 0x20<link>
        ether 86:2b:4a:a3:cd:22  txqueuelen 1000  (Ethernet)
        RX packets 257  bytes 31850 (31.1 KiB)
        RX errors 0  dropped 92  overruns 0  frame 0
        TX packets 18  bytes 1356 (1.3 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

 root@raspberrypi:/home/pi $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 root@raspberrypi:/home/pi $h1-eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1450
        inet 10.0.0.1  netmask 255.0.0.0  broadcast 10.255.255.255
        inet6 fe80::842b:4aff:fea3:cd22  prefixlen 64  scopeid 0x20<link>
        ether 86:2b:4a:a3:cd:22  txqueuelen 1000  (Ethernet)
        RX packets 280  bytes 33552 (32.7 KiB)
        RX errors 0  dropped 114  overruns 0  frame 0
        TX packets 18  bytes 1356 (1.3 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

 root@raspberrypi:/home/pi $h1-eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1450
        inet 10.0.0.1  netmask 255.0.0.0  broadcast 10.255.255.255
        inet6 fe80::842b:4aff:fea3:cd22  prefixlen 64  scopeid 0x20<link>
        ether 86:2b:4a:a3:cd:22  txqueuelen 1000  (Ethernet)
        RX packets 328  bytes 38062 (37.1 KiB)
        RX errors 0  dropped 155  overruns 0  frame 0
        TX packets 19  bytes 1426 (1.3 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

 root@raspberrypi:/home/pi $exit
*** Unknown command: xit
You may also send a command to a node using:
  <node> command {args}
For example:
  mininet> h1 ifconfig

The interpreter automatically substitutes IP addresses
for node names when a node is the first arg, so commands
like
  mininet> h2 ping h3
should work.

Some character-oriented interactive commands require
noecho:
  mininet> noecho h2 vi foo.py
However, starting up an xterm/gterm is generally better:
  mininet> xterm h2

*** Ping: testing ping reachability
h1 -> *** Error: could not parse ping output: bash: eping: command not found

X h3 
h2 -> h1 h3 
h3 -> h1 h2 
*** Results: 16% dropped (5/6 received)
*** Ping: testing ping reachability
h1 -> h2 h3 
h2 -> h1 h3 
h3 -> h1 h2 
*** Results: 0% dropped (6/6 received)
*** Ping: testing ping reachability
h1 -> h2 h3 
h2 -> h1 h3 
h3 -> h1 h2 
*** Results: 0% dropped (6/6 received)
rpi2 : h1 s1
rpi3 : h2 s2
rpi4 : h3 s3
rpi5 : 
rpi6 : 
rpi7 : 
rpi8 : 
rpi9 : 
rpi10 : 
rpi11 : 
rpi12 : 
rpi13 : 
rpi14 : 
rpi15 : 
localhost : 
 pi@raspberrypi:~ $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 pi@raspberrypi:~ $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 pi@raspberrypi:~ $PING 10.0.0.2 (10.0.0.2) 56(84) bytes of data.
64 bytes from 10.0.0.2: icmp_seq=1 ttl=64 time=5.32 ms
64 bytes from 10.0.0.2: icmp_seq=2 ttl=64 time=1.57 ms
64 bytes from 10.0.0.2: icmp_seq=3 ttl=64 time=1.58 ms
64 bytes from 10.0.0.2: icmp_seq=4 ttl=64 time=1.68 ms

--- 10.0.0.2 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3006ms
rtt min/avg/max/mdev = 1.578/2.543/5.328/1.608 ms
 pi@raspberrypi:~ $PING 10.0.0.2 (10.0.0.2) 56(84) bytes of data.
64 bytes from 10.0.0.2: icmp_seq=1 ttl=64 time=5.01 ms
64 bytes from 10.0.0.2: icmp_seq=2 ttl=64 time=1.57 ms
64 bytes from 10.0.0.2: icmp_seq=3 ttl=64 time=1.57 ms
64 bytes from 10.0.0.2: icmp_seq=4 ttl=64 time=1.58 ms

--- 10.0.0.2 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3006ms
rtt min/avg/max/mdev = 1.575/2.436/5.013/1.488 ms
 pi@raspberrypi:~ $exit
*** Unknown command: xit
You may also send a command to a node using:
  <node> command {args}
For example:
  mininet> h1 ifconfig

The interpreter automatically substitutes IP addresses
for node names when a node is the first arg, so commands
like
  mininet> h2 ping h3
should work.

Some character-oriented interactive commands require
noecho:
  mininet> noecho h2 vi foo.py
However, starting up an xterm/gterm is generally better:
  mininet> xterm h2

bash: esudo: command not found
 pi@raspberrypi:~ $pi        1161  0.0  0.4   4360  1796 pts/0    S+   21:39   0:00 grep --color=auto [01;31m[Kiperf[m[K
 pi@raspberrypi:~ $pi        1163  0.0  0.4   4360  1788 pts/0    S+   21:39   0:00 grep --color=auto [01;31m[Kiperf[m[K
 pi@raspberrypi:~ $Usage: iperf [-s|-c host] [options]
Try `iperf --help' for more information.
 pi@raspberrypi:~ $Usage: iperf [-s|-c host] [options]
Try `iperf --help' for more information.
 pi@raspberrypi:~ $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 pi@raspberrypi:~ $bash: lsls: command not found
 pi@raspberrypi:~ $Error opening terminal: unknown.
 pi@raspberrypi:~ $Error opening terminal: unknown.
 pi@raspberrypi:~ $Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
10.0.0.0        0.0.0.0         255.0.0.0       U     0      0        0 h1-eth0
 pi@raspberrypi:~ $Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
10.0.0.0        0.0.0.0         255.0.0.0       U     0      0        0 h1-eth0
 pi@raspberrypi:~ $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 pi@raspberrypi:~ $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 pi@raspberrypi:~ $distribution-karaf-0.6.4-Carbon  openflow      id.sh      multiscp.sh
logs                             pox           iplist     multissh.sh
mininet                          deleteme      l          sudo
oflops                           discover.sh   listen.sh
oftest                           IamTheSecond  log.txt
 pi@raspberrypi:~ $------------------------------------------------------------
Server listening on TCP port 5001
TCP window size: 85.3 KByte (default)
------------------------------------------------------------
Connection to 192.168.25.3 closed by remote host.
